/*
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⣤⣤⣴⣶⣶⣶⣾⣶⣶⣤⣀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⣠⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣷⣦⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⣾⣿⣿⣿⣿⡿⠟⠛⠛⠛⠛⠻⣿⣿⣿⣿⣿⣷⣄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⣠⣿⣿⣿⣿⡟⠉⣠⣤⣤⣤⣤⣤⣄⣀⠻⣿⣿⣿⣿⣿⣿⣧⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⣸⣿⣿⣿⣿⡏⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⣸⣿⣿⣿⣿⣿⣿⣿⡏⣿⡟⣿⣿⣿⡏⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠸⣿⣿⠋⣿⣿⣿⣿⠫⠁⣿⡇⢿⣿⣿⣿⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⠫⣿⣿⣧⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⣸⣿⠋⠸⣿⣿⣿⡿⠸⠄⢹⡇⠄⢹⣿⣿⠄⠄⠙⢿⣿⣿⣿⣿⣿⣿⠄⠙⣿⣿⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⣿⣿⡀⣸⣿⣿⣿⠁⡇⠄⠸⡇⠄⠄⣿⣿⠄⠄⠄⠄⠹⣿⣿⣿⣿⣿⣿⠄⠙⣿⣇⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢸⣿⣿⣿⣿⣿⣿⣿⠄⣤⣤⣤⠸⠄⠄⠙⢿⠇⠄⠄⣤⣶⣤⣿⣿⣿⣿⣿⠄⠴⣿⣿⡀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⣸⣿⣿⣿⣿⣿⣿⣿⣴⣿⣿⣿⣿⣄⠄⠄⠙⠿⣄⣿⣿⣿⣿⢿⣿⣿⣿⣿⠄⠄⠻⣿⣧⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⣿⣿⣿⣿⣿⣿⣿⣿⠄⠻⣿⠿⢿⠄⠄⠄⠄⠄⠸⠻⣿⣿⣿⡇⠹⣿⣿⣿⠄⠄⠄⠙⣿⣆⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⣿⣿⣿⣿⣿⣿⣿⣿⣇⠄⠢⣤⡎⠄⠄⠄⠄⠄⠄⠄⠢⣀⠙⠃⣠⣿⣿⣿⡇⠄⠄⣴⣿⣿⣆⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢿⣿⣿⣿⣿⣿⡏⠹⣿⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠿⣿⣿⣿⡇⠄⣴⣿⣿⣿⣿⣆⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢸⣿⡏⣿⣿⣿⣄⠄⣷⠡⠄⠄⠄⠤⠒⠒⠛⠒⠤⠄⠄⠄⠄⠔⢹⣿⣿⣿⡇⠄⢹⣿⣿⣿⣿⣿⡆⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠈⣿⡇⢹⣿⣿⣿⣦⣰⠄⠄⠄⠄⠃⠐⠈⠈⠐⢸⠄⠄⠄⠄⠄⣿⣿⣿⣿⡇⠄⢸⣿⣿⣿⣿⣿⣧⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠹⡇⠄⣿⣿⣿⣿⣿⣷⠄⠄⠄⠈⡀⡀⡀⡀⠃⠄⠄⠄⣾⣿⣿⣿⣿⣿⡇⠄⣸⣿⣿⣿⠹⣿⣿⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⣧⠄⢹⣿⣿⣿⣿⣿⣿⣧⠄⠄⠄⠄⠄⠄⠄⠄⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⢹⣿⣿⡏⢇⠄⢹⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠸⡇⠄⣿⣿⣿⣿⣿⠄⠹⣿⣿⡄⠄⠄⠄⣾⣿⠟⡿⢹⣿⣿⣿⣿⠋⣿⡄⠄⢹⣿⠃⠸⡄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠇⠙⣿⠹⣿⠋⠄⣴⣿⡿⡄⡄⡄⡄⡄⢿⣦⠄⣸⡿⢸⣿⠋⠄⠙⡇⠄⢸⡏⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠃⠄⠸⣿⣿⣿⡿⡄⡄⡄⡄⡄⡄⡄⣿⣿⣿⣄⢠⠙⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⣤⣤⣶⣶⣿⣿⣿⣿⣿⠃⡄⡄⡄⡄⡄⡄⡄⣿⣿⣿⣿⣷⣄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢿⣿⣿⣿⣿⣿⣿⣿⡟⡄⡄⡄⡄⡄⡄⡄⣸⣿⣿⣿⣿⣿⣿⣿⣦⣄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠸⣿⣿⣿⣿⣿⣿⣿⡢⡢⡪⡪⡪⡠⡄⣠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡷⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
*/

#include <iostream>
using namespace std;

const int N = 5007;
int n, a[N], dp[N][N];

int calc() {
	int res = 0;
	for (int i = 1; i < n - 2; i++) {
		for (int j = i + 2; j < n; j++) {
			if (a[i] - a[i-1] == a[j] - a[j-1]) {
				dp[i][j] = dp[i-1][j-1] + 1;
				res = max(res, min(dp[i][j], j-i-1));
			}
		}
	}
	return res + 1;
}

int main() {
	ios_base::sync_with_stdio(false); cin.tie(0);
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	int res = calc();
	//
	if (res >= 5) {
		cout << res << endl;
	} else {
		cout << 0 << endl;
	}
	return 0;
}
